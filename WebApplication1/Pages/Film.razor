@page "/film/{id}"
@using WebApplication1.Model
@using WebApplication1.Data
@inject NavigationManager NavigationManager
@inject IMovieService MovieService

<div id="filmInfo">
    <h4>Result</h4>
    <div class="fInfo">
        <h3 >@title</h3>

    </div>
    <div class="fInfo">
        <label>Year</label>
        <label>@year</label>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Stars:</th>
                <th>Birth:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in filmStars)
            {
                <tr  @onclick="e => GetStarDetails(item)">
                    <td>@item.name</td>
                    <td>@item.birth</td>
                </tr>
            }
        </tbody>

    </table>
    <table class="table">
        <thead>
        <tr>
            <th>Directors:</th>
            <th>Birth:</th>
  </tr>
        </thead>
        <tbody>
        @foreach (var item in directors)
        {
            <tr @onclick="e => GetDirectorDetails(item)">

                <td>@item.name</td>
                <td>@item.birth</td>
            </tr>
        }
        </tbody>

    </table>
    <button @onclick="addFilm">Add to my favorite! </button>
</div>

@code {

    private IMovieService movieService;
    public string title { set; get; }
    public int year { set; get; }

    [Parameter]
    public string id { get; set; }

    public int Id { set; get; }


    public IList<People> filmStars { set; get; } = new List<People>();
    public IList<People> directors { set; get; } = new List<People>();
    public IList<Movie> movies { set; get; } = new List<Movie>();

    public IList<Film> allFilms;
    public async void addFilm()
    {


        NavigationManager.NavigateTo("/TopFilmlist");
    }

    protected  override  async Task OnInitializedAsync()
    {
        Id = int.Parse(id);


        try
        {
            Console.WriteLine(int.MaxValue);
            Console.WriteLine(Id);
            movieService = new CloudMovieService();
            Movie movie = await movieService.getMovieById(Id);
            title = movie.title;
            Console.WriteLine("title is "+title);
            year = movie.year;
            Console.WriteLine("year is "+ year);
            directors = await movieService.getDirectorsById(Id);

            filmStars = await movieService.getStasById(Id);

            movies = await movieService.getMoviesByTitle(title);
            Console.WriteLine("this is" + movies[0].title);
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }
    public void GetDirectorDetails(People item)
    {
        int id = item.id;
        Console.WriteLine(id);
        NavigationManager.NavigateTo($"DirectorDetail/{id}");
    }

    public void GetStarDetails(People item)
    {
        int id = item.id;
        Console.WriteLine(id);
        NavigationManager.NavigateTo($"StarDetail/{id}");
    }

}
