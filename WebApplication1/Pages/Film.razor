@page "/film/{id}/{username}"
@using WebApplication1.Model
@using WebApplication1.Data
@inject NavigationManager NavigationManager
@inject IMovieService MovieService

<div>

    <h4>Result</h4>
    <div>
        <div class="fInfo">
            <h3>@title</h3>

        </div>
        <div class="fInfo">
            <label>Year</label>
            <label>@year</label>
        </div>

        <div class="fInfo">
            <label>Rating</label>
            <label>@rating</label>
        </div>
        <div class="fInfo">
            <label>Votes</label>
            <label>@votes</label>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Directors:</th>
                <th>Birth:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in directors)
            {
                <tr>
                    <a href="DirectorDetail/@item.id/@username">
                    <td>@item.name</td>
                    </a>
                    <td>@item.birth</td>

                </tr>
            }
        </tbody>

    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Stars:</th>
                <th>Birth:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in filmStars)
            {
                <tr>
                    <a href="StarDetail/@item.id/@username">
                    <td>@item.name</td>
                    </a>
                    <td>@item.birth</td>
                </tr>
            }
        </tbody>

    </table>
    <button @onclick="addFilm">Add to my favorite! </button>
</div>

@code {

    private IMovieService movieService;
    private IUserService userService;
    private Movielist movielist;
    public string title { set; get; }
    public int year { set; get; }
    public double rating { set; get; } = new double();
    public double votes { set; get; } = new double();

    [Parameter]
    public string id { get; set; }
    [Parameter]
    public string username { set; get; }

    public int Id { set; get; }


    public IList<People> filmStars { set; get; } = new List<People>();
    public IList<People> directors { set; get; } = new List<People>();
    public IList<Movie> movies { set; get; } = new List<Movie>();


    public async void addFilm()
    {

        try
        {
            movielist = new Movielist(username,Id);

            Console.WriteLine("this is" + movielist.username);
            await userService.addMovieToList(movielist);
            Console.WriteLine("123");
            NavigationManager.NavigateTo($"/TopFilmlist/{username}");
        }
        catch (Exception e)
        {

        }

    }

    protected  override  async Task OnInitializedAsync()
    {
        Id = int.Parse(id);


        try
        {
            Console.WriteLine(int.MaxValue);
            Console.WriteLine(Id);
            movieService = new CloudMovieService();
            userService = new UserService();
            Movie movie = await movieService.getMovieById(Id);
            title = movie.title;
            Console.WriteLine("title is "+title);
            rating = await movieService.getRatingById(Id);
            votes = await movieService.getVotesById(Id);
            year = movie.year;
            Console.WriteLine("year is "+ year);
            directors = await movieService.getDirectorsById(Id);

            filmStars = await movieService.getStasById(Id);

            movies = await movieService.getMoviesByTitle(title);
            Console.WriteLine("this is" + movies[0].title);
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }


}
