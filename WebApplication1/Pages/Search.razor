@page "/Search"
@using WebApplication1.Model
@using WebApplication1.Data

@inject NavigationManager NavigationManager


<div class="same">
    <div id="menu">
        <h3 id="h3prof">GreatestFilm</h3>
        <NavLink href="TopFilmlist" class="up"> TopFilm list</NavLink>
        <NavLink href="profileview" class="up">Profile</NavLink>
        <NavLink href="search" class="up">Search</NavLink>
        <div id="filmSearch">
            <div class="form-group">
                <label>Film name:</label>
                <input type="text" placeholder="film name" @bind-value="filmname" />
            </div>
        </div>

        <div>
            <button @onclick="search"> search </button>
            <button @onclick="clear"> clear </button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Movies:</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in result)
                {

                <tr>
                    <a href="film/@item.id">
                    <td>@item.title</td>
                    </a>
                    <td>@item.year</td>

                </tr>

                }
                <ul>
                    @for (int a = 1; a <= result1.Count() / pageSize; a++)
                    {
                         int p = a;
                        
                        <button type="button" @onclick="(e=>HandleChangePage(p))" >@p</button>
                        
                    }
                </ul>
            </tbody>

        </table>



        <div>
            <label> @message</label>
        </div>

      
    </div>
</div>

           


@code {
    private IMovieService movieService;
    private int pageNumber = 1;
    private int pageSize = 20;
    private string text ="new";
    public string filmname { set; get; }
    public string message { set; get; }
    public IList<Movie> result = new List<Movie>();
    public IList<Movie> result1 = new List<Movie>();


    public async Task search()
    {
        try
        {


            movieService = new CloudMovieService();


            IList<Movie> movies = await movieService.getMoviesByTitle(filmname);
            result1 = movies;
            HandleChangePage(result1.Count / pageSize);
            Console.WriteLine("The title is" + text);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }


    }


    public async Task clear()
    {
        result.Clear();

    }

  
    void HandleChangePage(int p)
    {
        pageNumber = p;

        result = new List<Movie>(result1.Skip((p - 1) * pageSize).Take(pageSize));
        Console.WriteLine("p is "+p);
        foreach (var item in result) {
            Console.WriteLine(item.title);
        }
    }

}
