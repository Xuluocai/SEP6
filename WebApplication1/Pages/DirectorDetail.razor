@page "/DirectorDetail/{id}/{username}"
@using WebApplication1.Data
@using WebApplication1.Model
@inject NavigationManager NavigationManager  

<div id="filmInfo">
    <h4>Result</h4>
    <div class="fInfo">
        <h3>@name</h3>

    </div>
    <div class="fInfo">
        <label>Birth</label>
        <label>@birth</label>
    </div>
    <div class="fInfo">
        <label>Average Rating</label>
        <label>@rating</label>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Movies:</th>
                <th>Year:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in movies)
            {
                <tr>
                    <a href="film/@item.id/@username">
                    <td>@item.title</td>
                    </a>
                    <td>@item.year</td>
                </tr>
            }
        </tbody>

    </table>
</div>
    @code {
        public string name { set; get; }
        public int birth { set; get; }
        public double rating { set; get; }

        [Parameter]
        public string id { get; set; }
        [Parameter]
        public string username { set; get; }

        public int Id { set; get; }
        public IList<Movie> movies { set; get; } = new List<Movie>();

        private IMovieService movieService;

        protected override async Task OnInitializedAsync()
        {
            Id = int.Parse(id);


            try
            {

                Console.WriteLine(Id);
                movieService = new CloudMovieService();
                People people = await movieService.getPeopleById(Id);
                name = people.name;

                birth = people.birth;
                // Console.WriteLine("year is " + year);
                IList<Movie> movies1 = await movieService.getMoviesByDirector(Id);
                movies = movies1;


                for (int i = 0; i <= movies.Count; i++) {

                    double rating1 = await movieService.getRatingById(movies[1].id);
                    rating = rating + rating1;
                }

                rating = rating / (movies.Count);
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }

        }


    }
